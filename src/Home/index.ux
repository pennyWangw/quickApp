<template>
    <!-- template里只能有一个根节点 -->
    <div class="demo-page">
        <text class="top-title">{{new Date(year).getFullYear()}}</text>
        <list id="alist" class="content-page" onscrolltop="getDatas">
            <list-item class="month-div" type="product" for="month in allDays" onappear="getCurYear(month.month)">
                <div class="month-num item-text">
                    <text>{{new Date(month.month).getMonth() + 1}}月</text>
                </div>
                <div class="week-div">
                    <div for="weekDay in week" class="item-text">
                        <text>{{weekDay}}</text>
                    </div>
                </div>
                <div class="week-div flex-wrap">
                    <div for="day in month.day"
                         class="item-text {{(choosedDays.indexOf(day) > -1 && day.curMonth) ? 'choosename' : ''}}"
                         onclick="getCurDay(day)"
                         onlongpress="showRecord(day)">
                        <text class="{{day.curMonth ? '' : 'lightgray'}}">{{new Date(day.day).getDate()}}</text>
                    </div>
                </div>
            </list-item>
        </list>
        <div class="out-pop" if="{{showPop}}">
            <div class="center-pop">
                <div class="close-cont">
                    <div class="close" onclick="closePop()">
                        <text class="close-text">x</text>
                    </div>
                </div>
                <text class="center-text">{{clickDay.day}}</text>
                <div class="content-pop">
                    <div class="row-inline">
                        <text>体温:</text>
                        <input value="" onchange="enterkeyclick" class="input-class" maxlength="5">
                    </div>
                    <text if="{{showTemPo}}" class="worn-text">请输入34.00 - 42.00的数字！</text>
                    <div class="row-inline">
                        <text>生活:</text>
                        <input checked="{{sexLife}}" type="checkbox" onchange="enterkeyclick" maxlength="5">
                        <picker type="time" value="{{sexTime}}" class="picker" onchange="chooseTime"></picker>
                    </div>
                </div>

            </div>
        </div>
    </div>
</template>

<script>
  import router from '@system.router'

  export default {
    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
    private: {
      title: '示例页面',
      week: ['一', '二', '三', '四', '五', '六', '日'],
      year: new Date(),
      allDays: [],
      choosedDays: [],
      showPop: true,
      clickDay: {
        day: '2018-10-10'
      },
      showTemPo: false,
      tempValue: 34,
      sexLife: false,
      sexTime: '请选择时间'
    },
    onInit() {
      let date = new Date()
      let curDate = `${date.getFullYear()}-${date.getMonth() + 1}-01`
      this.getMounth(curDate)
      date.setMonth(date.getMonth() - 1)
      this.getMounth(`${date.getFullYear()}-${date.getMonth() + 1}-01`)
    },
    onShow() {
      setTimeout(() => {
        this.$element('alist').scrollTo({index: 1})
      }, 100)
    },
    showRecord(day) {

    },
    getMounth(day) {
      let monthObject = {
        month: day,
        day: []
      }
      let date = new Date(day)
      let firstDay = date.getDay()
      firstDay = firstDay === 0 ? 7 : firstDay
      for (let i = 1; i < firstDay; i++) {
        let day1 = new Date(date)
        day1.setDate(day1.getDate() - i)
        monthObject.day.unshift({
          curMonth: false,
          day: this.dateFormat(day1)
        })
      }
      date.setMonth(date.getMonth() + 1)
      date.setDate(date.getDate() - 1)
      let haveDays = date.getDate()
      for (let j = 0; j < haveDays; j++) {
        let day2 = new Date(day)
        day2.setDate(day2.getDate() + j)
        monthObject.day.push({
          curMonth: true,
          day: this.dateFormat(day2)
        })
      }
      let lastDay = date.getDay()
      console.log(lastDay + 'day' + this.dateFormat(date))
      if (lastDay !== 0) {
        for (let k = 1; k < (7 - lastDay + 1); k++) {
          let day3 = new Date(date)
          day3.setDate(day3.getDate() + k)
          monthObject.day.push({
            curMonth: false,
            day: this.dateFormat(day3)
          })
        }
      }
      this.allDays.unshift(monthObject)
    },
    dateFormat(date) {
      let day = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`
      return day
    },
    getDatas() {
      let month = new Date(this.allDays[0].month)
      month.setMonth(month.getMonth() - 1)
      this.year = month
      this.getMounth(this.dateFormat(month))
    },
    getCurYear(event) {
      this.year = event
    },
    getCurDay(day) {
      this.showPop = true
      if (day.curMonth) {
        let index = this.choosedDays.indexOf(day)
        if (index > -1) {
          this.choosedDays.splice(index, 1)
        } else {
          this.choosedDays.push(day)
          this.clickDay = day
        }
      }
    },
    closePop() {
      this.showPop = false
    },
    enterkeyclick (e) {
      console.log(34 < e.value)
      if (!(34 < e.value && e.value < 42)) {
        this.showTemPo = true
      } else {
        this.showTemPo = false
        this.tempValue = e.value
      }
    },
    closeTemPo () {
      this.showTemPo = false
    },
    chooseTime (val) {
      this.sexTime = (val.hour < 10 ? ('0' + val.hour) : val.hour) + ':' + val.minute
    },
    routeDetail() {
      // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
      router.push({
        uri: '/Detail'
      })
    }
  }
</script>

<style>
    .demo-page {
        /*position: relative;*/
        flex-direction: column;
        text-align: center;
    }

    .top-title {
        position: fixed;
        left: 0;
        top: 0;
        font-size: 40px;
        text-align: center;
        line-height: 100px;
        height: 100px;
        background: linear-gradient(#FFAEB9, #ffffff);
        color: #2E2E2E;
        width: 100%;
    }

    .content-page {
        margin-top: 100px;
        width: 100%;
        padding: 0 15px;
        height: 100%;
    }

    .month-div {
        width: 100%;
        flex-direction: column;
        align-items: center;
    }

    .week-div {
        align-items: center;
        flex-direction: row;
        justify-content: center;
        width: 100%;
    }

    .item-text {
        margin: 14px;
        width: 70px;
        text-align: center;
        height: 70px;
    }

    .item-text text {
        width: 100%;
        text-align: center;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .choosename {
        background-color: #FFAEB9;
        border-radius: 35px;
    }

    .lightgray {
        color: #cccccc;
    }

    .out-pop {
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6);
        top: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .center-pop {
        width: 70%;
        height: 40%;
        background-color: #efefef;
        border-radius: 10px;
        padding: 15px;
        flex-direction: column;
    }
    .tip-pop{
        width: 60%;
        align-items: center;
        align-content: center;
        justify-content: center;
        height: 90px;
        background-color: #efefef;
        border-radius: 10px;
    }
    .worn-text{
        color: #EE6AA7;
        margin-left: 90px;
        font-size: 24px;
    }

    .close-cont {
        width: 100%;
        justify-content: flex-end;
    }

    .close {
        width: 40px;
        height: 40px;
        border-radius: 20px;
        justify-content: center;
        /*align-content: center;*/
        border: 2px solid #EE6AA7;
    }

    .close-text {
        color: #EE6AA7;
        font-size: 26px;
        margin-top: -5px;
    }
    .center-text{
        align-self: center;
    }
    .content-pop{
        padding: 0 30px;
        flex-direction: column;
    }
    .input-class{
        border: 2px solid #EE6AA7;
        border-radius: 8px;
        font-size: 36px;
        margin-left: 30px;
        padding: 6px 20px;
        color: #EE6AA7;
        width: 70%;
    }
    .mask-class{
        mask-color: rgba(0,0,0,1)
    }
    .right-input{
        flex-direction: column;
    }
    .row-inline{
        flex-direction: row;
        margin-top: 20px;
    }
    .picker{
        /*width: 200px;*/
        /*border: 2px solid #EE6AA7;*/
        border-radius: 10px;
        color: #FFAEB9;
        padding: 0px 20px;
    }
</style>
